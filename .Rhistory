save(list = c('V','U'),file = 'VUfile.Rdata')
load("VUfile.RData")
library(reshape2)
test = melt(U)
test[,test['value'] == 33]
head(test)
test[,test['value'] == 33]
test[test['value'] == 33,]
U[100,1,]
test[test['value'] == 32,]
test[test['value'] == 11,]
test[test['value'] == 12,]
test[test['value'] == 20,]
distinct(test['value'])
unique(test['value'])
test[test['value'] == 16,]
U[1,87,5]
U[1,87,]
U[2,87,]
source('HogStrategy.R')
unique(test['value']) #Most you will ever gamble is 16
optimal_prob = melt(V)
optimal_roll[optimal_roll['value'] == 33,] #You are going to win anyways with 100
optimal_roll = melt(U)
optimal_prob = melt(V)
optimal_roll[optimal_roll['value'] == 33,] #You are going to win anyways with 100
unique(optimal_roll['value']) #Most you will ever gamble is 16
U[1,99,,]
U[1,99,]
U[1,100,]
U[100,1,]
optimal_roll[optimal_roll['value'] == 33,] #You are going to win anyways with 100
optimal_prob[optimal_roll['value'] == 33,]
optimal_prob[optimal_roll['value'] == 16,]
1-(5/6)^16
V[10,86,]
U[10,86,]
optimal_prob[optimal_roll['value'] == 16,]
((1-(5/6)^16))*64
((1-(5/6)^16))
1-((1-(5/6)^16))
(1-((1-(5/6)^16)))*64
(1-((1-(5/6)^17)))*68
(1-((1-(5/6)^15)))*60
unique(optimal_roll['value']) #Most you will ever gamble is 16
head(optimal_prob)
